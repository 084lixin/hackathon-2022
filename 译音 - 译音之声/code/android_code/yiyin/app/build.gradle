apply plugin: 'com.android.application'
apply plugin: 'com.huawei.agconnect'
android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'

    defaultConfig {

        applicationId "mobi.yiyin"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
            storeFile file('yiyin.keystore')
            storePassword "yy2099yy"
            keyAlias "yiyin"
            keyPassword "yy2099yy"
        }
        release {
            storeFile file('yiyin.keystore')
            storePassword "yy2099yy"
            keyAlias "yiyin"
            keyPassword "yy2099yy"
        }
        config {
            keyAlias 'yiyin'
            storeFile file('/Users/zhoujiangnan/DeafLifePro/yiyin/app/yiyin.keystore')
            storePassword 'yy2099yy'
            keyPassword 'yy2099yy'
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def date = new Date().format("yy-MM-dd", TimeZone.getTimeZone("GMT+08"))
            if (variant.buildType.name.equals('debug')) {
                outputFileName = "知音_${versionCode}_${versionName}_${date}_debug.apk"
            }
            if (variant.buildType.name.equals('release')) {
                outputFileName = "知音_${versionCode}_${versionName}_${date}_release.apk"
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //语音听写
    implementation files('libs/Msc.jar')
    //  AndroidX 的应用
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.7.9'

    // 声网视频通话
    implementation files('libs/agora-rtc-sdk.jar')


    implementation 'com.huawei.agconnect:agconnect-core:1.5.2.300'

    //华为HMS服务
    implementation 'com.huawei.hms:ads-installreferrer:3.4.34.301'
    implementation 'com.huawei.hms:ads-identifier:3.4.34.301'
    implementation 'com.huawei.hms:hianalytics:5.0.5.300'
    implementation 'com.huawei.hms:push:5.3.0.301'

    //   引入音频文件转写服务SDK Audio file transcription.引入音频文件转写服务SDK
    implementation 'com.huawei.hms:ml-computer-voice-aft:2.2.0.300'
    // download.
    implementation 'com.huawei.hms:ml-computer-model-download:2.2.0.300'

    // 引入基础SDK
    implementation 'com.huawei.hms:ml-computer-voice-tts:3.0.0.300'
    // 引入离线语音合成bee语音包
    implementation 'com.huawei.hms:ml-computer-voice-tts-model-bee:3.0.0.300'
    // 引入离线语音合成eagle语音包
    implementation 'com.huawei.hms:ml-computer-voice-tts-model-eagle:3.0.0.300'

    // 引入实时语音转写服务SDK  Automatic speech recognition Long voice.
    implementation 'com.huawei.hms:ml-computer-voice-realtimetranscription:3.0.0.301'
    //   //

    // Automatic speech recognition
    //  推荐集成实时语音识别服务插件，插件提供拾音界面，SDK只提供实时语音识别的基础服务，拾音界面需要自行开发。
    //引入实时语音识别服务插件
    implementation 'com.huawei.hms:ml-computer-voice-asr-plugin:2.2.0.300'
    // 引入实时语音识别服务SDK
    implementation 'com.huawei.hms:ml-computer-voice-asr:2.2.0.300'

    // 引入声音识别集合包  Full SDK方式集成的示例代码
    implementation 'com.huawei.hms:ml-speech-semantics-sounddect-sdk:2.1.0.300'  //
    implementation 'com.huawei.hms:ml-speech-semantics-sounddect-model:2.1.0.300'


    // 引入基础SDK
    implementation 'com.huawei.hms:ml-computer-vision-handkeypoint:2.1.0.300'
    // 引入手部关键点检测模型包
    implementation 'com.huawei.hms:ml-computer-vision-handkeypoint-model:2.1.0.300'
    // 引入手势识别模型包
    implementation 'com.huawei.hms:ml-computer-vision-gesture-model:2.1.0.300'

    //引入华为AR引擎，可以用于的手势识别和手势识别相关功能
    implementation 'com.huawei.hms:arenginesdk:2.15.0.1'



    // CameraX core library
    def camerax_version = '1.1.0-alpha04'
    implementation "androidx.camera:camera-core:$camerax_version"
    // CameraX Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"

    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"

    // CameraX View class
    implementation 'androidx.camera:camera-view:1.0.0-alpha24'
    compileOnly 'com.google.android.wearable:wearable:2.8.1'


}
